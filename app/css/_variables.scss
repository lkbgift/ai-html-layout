//
// Advanced Layout
//

  // Foundation Global Function, Variables and Mixins
  //
  // Variables
  //

  // This is the default html and body font-size for the base em value.
  $em-base: 16px;

  $header-font-family:                   "freight-sans-pro", sans-serif;
  $header-font-weight:                   400;
  $header-font-style:                    normal;
  $header-font-color:                    #222;
  $header-line-height:                   1.4;
  $header-top-margin:                    .2em;
  $header-bottom-margin:                 .5em;
  $header-text-rendering:                optimizeLegibility;
  $subheader-font-weight:                400;

  h3.subheader{ font-size: 2em; }
  h4.subheader{ font-family: "franklin-gothic-urw-comp"; text-transform: uppercase; }

  // We use these to control various global styles
  $body-bg: #fff;
  $body-font-color: #222;
  $body-font-family: "freight-sans-pro", sans-serif;
  $body-font-weight: 400;
  $body-font-style: normal;

  // We use this to control font-smoothing
  $font-smoothing: antialiased;

  // We use these to control text direction settings
  $text-direction: ltr;

  // We use these as default colors throughout
  $primary-color: #B61636;
  $secondary-color: #59848c;
  $alert-color: #B65116;
  $success-color: #16B67E;

  // We use these to make sure border radius matches unless we want it different.
  $global-radius: 3px;
  $global-rounded: 1000px;

  // We use these to control inset shadow shiny edges and depressions.
  $shiny-edge-size: 0 1px 0;
  $shiny-edge-color: rgba(#fff, .5);
  $shiny-edge-active-color: rgba(#000, .2);

  // We use this to control whether or not CSS classes come through in the gem files.
  $include-html-classes: true;
  $include-print-styles: true;

  $left-spacing: .08em;

  //
  // Functions
  //

  // Working in ems is annoying. Think in pixels by using this handy function, emCalc(#px)
  @function emCalc($pxWidth) {
    @return $pxWidth / $em-base * 1em;
  }

  // Creating rems and pixels
  @function remCalc($pxWidth) {
    @return $pxWidth / $em-base * 1rem;
  }

  // Grid Calculation for Percentages
  @function gridCalc($colNumber, $totalColumns) {
    @return percentage(($colNumber / $totalColumns));
  }